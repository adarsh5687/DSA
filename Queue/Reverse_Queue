#include <iostream>
#include<queue>
#include<stack>
using namespace std;

void reverseQueue(queue<int>&q){
  stack<int> s;

  //step1: put all elements of q into s
  while(!q.empty() ){
    int element = q.front();
    q.pop();

    s.push(element);

  }
  //step2: put all element from stack into queue
  while(!s.empty()){
    int element = s.top();
    s.pop();

    q.push(element);
  }
}

void reverseQueueRecursion(queue<int> &q){
  //Base case
  if(q.empty()){
    return;
  }
  //Step A
  int temp = q.front();
  q.pop();

  //Step B
  reverseQueueRecursion(q);

  //Step C
  q.push(temp);
}

int main() {
  queue<int> q;
  q.push(3);
  q.push(6);
  q.push(9);
  q.push(4);
  q.push(8);

  reverseQueueRecursion(q);

  cout<<"printing Queue"<<endl;
  while(!q.empty()){
    cout<<q.front()<<" ";
    q.pop();
  }
  cout<<endl;
  return 0;
}
